using System.Security.Claims;

public string GenerateToken(User user)
{
    var securityKey = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(_secureKey));
    var credentials = new SigningCredentials(securityKey, SecurityAlgorithms.HmacSha256Signature);

    var claims = new List<Claim>
    {
        new Claim(JwtRegisteredClaimNames.Sub, user.UserId.ToString()),
        new Claim(JwtRegisteredClaimNames.Jti, Guid.NewGuid().ToString()),
        new Claim(JwtRegisteredClaimNames.Iat, DateTime.UtcNow.ToString()),
        new Claim("firstName", user.FirstName),
        new Claim("lastName", user.LastName)
    };

    var token = new JwtSecurityToken(
        issuer: null,
        audience: null,
        claims: claims,
        notBefore: DateTime.UtcNow,
        expires: DateTime.UtcNow.AddDays(1),
        signingCredentials: credentials
    );

    return new JwtSecurityTokenHandler().WriteToken(token);
}
--
public async Task<RepositoryResponseDTO<User>> Login(LoginDTO loginDTO)
{
    try
    {
        User existingUser = await _context.Users.SingleOrDefaultAsync(user => user.Cin == loginDTO.Cin);

        if (existingUser == null || !_authService.VerifyPassword(loginDTO.Password, existingUser.Password))
        {
            return new RepositoryResponseDTO<User>
            {
                IsSuccessful = false,
                Message = "Invalid credentials",
                Token = null
            };
        }

        if (!existingUser.Access)
        {
            return new RepositoryResponseDTO<User>
            {
                IsSuccessful = false,
                Message = "Access denied",
                Token = null
            };
        }

        string token = _authService.GenerateToken(existingUser);

        return new RepositoryResponseDTO<User>
        {
            IsSuccessful = true,
            Message = "User logged in successfully",
            Token = token
        };
    }
    catch (Exception ex)
    {
        _logger.LogError(ex, "Exception: An unexpected error occurred while logging the user.");
        throw new Exception($"An unexpected error occurred while logging the user: {ex.Message}", ex);
    }
}

